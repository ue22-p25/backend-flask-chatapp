## !intro Chat App step by step

**Warning**:  
[the final code is available at this repo](https://github.com/ue22-p25/backend-flask-chatapp-steps)
(as well as all the steps in the successive commits)

so, our goal here is to show **why** we're doing things, and **in what order**  
**do not try** to apply these successive **changes yourself** in the code !  
This would be very time-consuming, you would find yourself spending all your time doing cut-and-paste,
and that's not the goal here :)


### step 00: the starter code

the starter code in step 00 is the basic Flask `hello world` app

```python app.py
!from ../app-00.py
```

{{AUTO}}

## !outro conclusion

### some illustrations

![](front-users.excalidraw.svg)
![](socketio.excalidraw.svg)

### after thoughts

it seems that the choice of our endpoints is not necessarily in line with common practice;
the following renaming has been suggested:

- `/api/messages/1/` to send a message from user 1, with the other message fields (like `recipient_id`)
  passed in the POST JSON data


### further work

from this, you can now improve this code to support actual (multi-people) rooms;
2 levels of involvement can be envisioned

1. Just write the steps that would be needed, in mush the same way as above
1. and/or if you're up for it, go as far as implementing it
